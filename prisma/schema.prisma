// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  password  String?
  rol       Role?
  address String?
  phone String?
  active    Boolean? @default(true)
  clubId    String?
  club      Club?    @relation(fields: [clubId], references: [id])
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Club {
  id        String   @id @default(cuid())
  name      String?
  description String?
  image     String?
  address   String?
  phone     String?
  email     String?
  website   String?
  minMonthlyGrams  Float?   @default(0)
  active    Boolean? @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
  products  Product[]
  DatesClub DatesClub[]
}

model DatesClub {
  id          String   @id @default(cuid())
  dayOfWeek   Int      
  startTime   String   // Formato "HH:mm"
  endTime     String   // Formato "HH:mm"
  maxCapacity Int?     // Capacidad máxima de reservas para este horario
  isActive    Boolean  @default(true) 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  club        Club     @relation(fields: [clubId], references: [id])
  clubId      String
  
  @@unique([clubId, dayOfWeek]) // Evitar horarios duplicados para el mismo día
}

model Product {
  id          String   @id @default(cuid())
  name        String?
  description String?
  image       String?
  price       Float?
  category    String?
  thc         Int?
  CBD         Int?
  stock Int?
  active      Boolean? @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  clubId      String?
  club        Club?    @relation(fields: [clubId], references: [id])
  orderItems  OrderItem[]
}

model Order {
  id        String      @id @default(cuid())
  userId    String?
  user      User?       @relation(fields: [userId], references: [id])
  total     Int
  dateOrder String
  hourOrder String
  comment   String?
  status    StatusOrder @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  items     OrderItem[] 
}

model OrderItem {
  id        String   @id @default(cuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Float    // gramos
}

enum StatusOrder {
  PENDING
  COMPLETED
  CANCELED
}

enum Role {
  USER
  CLUB
  ADMIN
}



